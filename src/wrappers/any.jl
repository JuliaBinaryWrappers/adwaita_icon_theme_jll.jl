# Autogenerated wrapper script for adwaita_icon_theme_jll for any
export adwaita_icons_dir

using hicolor_icon_theme_jll
## Global variables
PATH = ""
LIBPATH = ""
LIBPATH_env = "LD_LIBRARY_PATH"
LIBPATH_default = ""

# Relative path to `adwaita_icons_dir`
const adwaita_icons_dir_splitpath = ["share", "icons"]

# This will be filled out by __init__() for all products, as it must be done at runtime
adwaita_icons_dir_path = ""

# adwaita_icons_dir-specific global declaration
# This will be filled out by __init__()
adwaita_icons_dir = ""


"""
Open all libraries
"""
function __init__()
    global artifact_dir = abspath(artifact"adwaita_icon_theme")

    # Initialize PATH and LIBPATH environment variable listings
    global PATH_list, LIBPATH_list
    # From the list of our dependencies, generate a tuple of all the PATH and LIBPATH lists,
    # then append them to our own.
    foreach(p -> append!(PATH_list, p), (hicolor_icon_theme_jll.PATH_list,))
    foreach(p -> append!(LIBPATH_list, p), (hicolor_icon_theme_jll.LIBPATH_list,))

    global adwaita_icons_dir_path = normpath(joinpath(artifact_dir, adwaita_icons_dir_splitpath...))

    global adwaita_icons_dir = adwaita_icons_dir_path
    # Filter out duplicate and empty entries in our PATH and LIBPATH entries
    filter!(!isempty, unique!(PATH_list))
    filter!(!isempty, unique!(LIBPATH_list))
    global PATH = join(PATH_list, ':')
    global LIBPATH = join(vcat(LIBPATH_list, [joinpath(Sys.BINDIR, Base.LIBDIR, "julia"), joinpath(Sys.BINDIR, Base.LIBDIR)]), ':')

    
end  # __init__()

